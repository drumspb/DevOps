---
- name: Install Zabbix Server
  hosts: zabbix_server
  become: true
  vars:
    ansible_remote_tmp: /tmp/.ansible-${USER}

  tasks:
    - name: Скачать пакет репозитория Zabbix
      get_url:
        url: https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_7.0-2+ubuntu24.04_all.deb
        dest: /tmp/zabbix-release_7.0-2+ubuntu24.04_all.deb

    - name: Установить пакет репозитория Zabbix с помощью dpkg
      command: sudo dpkg -i /tmp/zabbix-release_7.0-2+ubuntu24.04_all.deb

    - name: Обновить пакетный список apt после установки репозитория Zabbix
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - acl
          - python3-pip
          - python3-psycopg2
          - postgresql
          - zabbix-server-pgsql
          - zabbix-frontend-php
          - php8.3-pgsql
          - zabbix-apache-conf
          - zabbix-sql-scripts
          - zabbix-agent
        state: present

    - name: Создать резервную копию pg_hba.conf
      copy:
        src: /etc/postgresql/16/main/pg_hba.conf  # Замените на ваш путь
        dest: /etc/postgresql/16/main/pg_hba.conf.bak
        remote_src: yes

    - name: Изменения правил подключения для postgres
      community.postgresql.postgresql_pg_hba:
        dest: /etc/postgresql/16/main/pg_hba.conf
        contype: local
        databases: all
        users: postgres
        state: present
        method: trust

    - name: Перезапустить PostgreSQL
      service:
        name: postgresql
        state: restarted        
   
    - name: Create Zabbix database user
      become: true
      become_method: enable
      become_user: postgres
      community.postgresql.postgresql_user:
        name: zabbix
        password: password
        state: present

    - name: Загрузка файла на ansible хост
      ansible.builtin.copy:
        src: /home/drum/DevOps/zabbix.dump
        dest: /tmp/zabbix.dump

    - name: Create Zabbix database
      become_user: postgres
      postgresql_db:
        name: zabbix
        owner: zabbix

    - name: Restore базы zabbix на зарание созданную
      become: true
      become_method: enable
      become_user: postgres
      community.postgresql.postgresql_db:
        name: zabbix
        state: restore
        target: /tmp/zabbix.dump

    - name: Configure Zabbix server
      lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        regexp: '^DBPassword='
        line: 'DBPassword=password'
        state: present

    - name: Restart services
      systemd:
        name: "{{ item }}"
        state: restarted
        enabled: true
      loop:
        - zabbix-server
        - zabbix-agent
        - apache2

- name: Install Zabbix agent
  hosts: all
  become: true
  vars:
    ansible_remote_tmp: /tmp/.ansible-${USER}

  tasks:
    - name: Get Zabbix server IP
      set_fact:
        zabbix_server_ip: "{{ item }}"
      loop: "{{ groups['zabbix_server'] }}"
      when: "inventory_hostname != item"

    - name: Скачать пакет репозитория Zabbix
      get_url:
        url: https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_7.0-2+ubuntu24.04_all.deb
        dest: /tmp/zabbix-release_7.0-2+ubuntu24.04_all.deb

    - name: Установить пакет репозитория Zabbix с помощью dpkg
      command: sudo dpkg -i /tmp/zabbix-release_7.0-2+ubuntu24.04_all.deb

    - name: Обновить пакетный список apt после установки репозитория Zabbix
      apt:
        update_cache: yes   

    - name: Install required packages
      apt:
        name:
          - zabbix-agent2
          - zabbix-agent2-plugin-*
        state: present

    - name: Update Server parameter
      ansible.builtin.replace:
        path: /etc/zabbix/zabbix_agent2.conf
        regexp: '^Server=.*'
        replace: 'Server={{ zabbix_server_ip }}'
        backup: yes  # Создать резервную копию файла перед изменением

    - name: Update ActiveServer parameter
      ansible.builtin.replace:
        path: /etc/zabbix/zabbix_agent2.conf
        regexp: '^ServerActive=.*'
        replace: 'ServerActive={{ zabbix_server_ip }}'
        backup: yes  # Создать резервную копию файла перед изменением

    - name: Update ActiveServer parameter
      ansible.builtin.replace:
        path: /etc/zabbix/zabbix_agent2.conf
        regexp: '^Hostname=.*'
        replace: 'Hostname={{ inventory_hostname }}'
        backup: yes  # Создать резервную копию файла перед изменением        

    - name: Restart services
      systemd:
        name: "{{ item }}"
        state: restarted
        enabled: true
      loop:
        - zabbix-agent2     

- name: Install  Docker
  hosts: elasticsearch, kibana, web
  become: true

  tasks:

    - name: Update APT package index
      apt:
        update_cache: yes


    - name: install dependencies
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: add GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add docker repository to apt
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update APT package index (after adding Docker repository)
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest

    - name: Ensure the current user is added to the docker group
      user:
        name: "{{ ansible_user }}"  # текущий пользователь
        group: docker
        append: yes

    - name: Start and enable Docker
      systemd:
        name: docker
        state: started
        enabled: yes

- name: Install  elasticsearch
  hosts: elasticsearch
  become: true

  tasks:

    - name: Run Bitnami Elasticsearch container
      docker_container:
        name: elasticsearch
        image: bitnami/elasticsearch:latest
        state: started
        restart_policy: unless-stopped
        published_ports:
          - "9200:9200"
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"

- name: Install  kibana
  hosts: kibana
  become: true

  tasks:          

    - name: Set elasticsearch server IP
      set_fact:
        elasticsearch_server_ip: "{{ hostvars[groups['elasticsearch'][0]]['ansible_host'] }}"

    - name: Run Bitnami Kibana container
      docker_container:
        name: kibana
        image: bitnami/kibana:latest
        state: started
        restart_policy: unless-stopped
        published_ports:
          - "5601:5601"
        env:
          KIBANA_ELASTICSEARCH_URL: "http://{{ elasticsearch_server_ip }}:9200"           


- name: настройка web
  hosts: web
  become: yes 
   
  tasks:

  - name: Установить необходимые пакеты
    apt:
      name:
        - nginx
        - apt-transport-https
        - wget
      state: present

  - name: Установить и настроить конфигурацию Nginx
    template:  # Используйте это, если у вас есть шаблон конфигурации
      src: default.conf.j2
      dest: /etc/nginx/sites-available/default
    notify:
      - Перезапустить Nginx

  - name: Set elasticsearch server IP
    set_fact:
      elasticsearch_server_ip: "{{ hostvars[groups['elasticsearch'][0]]['ansible_host'] }}"

  - name: Копировать файл test.html в каталог для веб-сайта
    copy:
      src: /home/drum/DevOps/test.html  # Укажите путь к файлу test.html на вашем компьютере
      dest: /var/www/html/test.html
      owner: www-data
      group: www-data
      mode: '0644'

  - name: Проверить файл test.html
    stat:
      path: /var/www/html/test.html
    register: test_html_file

  - name: Вывести информацию о файле
    debug:
      msg: "Файл теста существует: {{ test_html_file.stat.exists }}"

  - name: Убедиться, что Nginx запущен и включен
    service:
      name: nginx
      state: started
      enabled: yes

  - name: Перезапустить Nginx
    service:
      name: nginx
      state: restarted

  - name: Create directory for Filebeat config
    file:
      path: /etc/filebeat
      state: directory
      mode: '0755'

  - name: Copy Filebeat configuration
    copy:
      dest: /etc/filebeat/filebeat.yml
      content: |
        filebeat.inputs:
          - type: log
            enabled: true
            paths:
              - /var/log/nginx/access.log
              - /var/log/nginx/error.log
            fields:
              service: nginx

        output.elasticsearch:
          hosts: ["http://{{ elasticsearch_server_ip }}:9200"]    

  - name: Run Filebeat Docker container
    docker_container:
      name: filebeat
      image: chainguard/filebeat:latest  
      state: started
      restart_policy: unless-stopped
      volumes:
        - /var/log/nginx:/var/log/nginx  # Монтируем логи Nginx
        - /etc/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml  # Конфигурация Filebeat
      network_mode: "host"  # Или используйте подходящую настройку сети

  - name: Ensure permissions on log files
    file:
      path: /var/log/nginx
      owner: root
      group: root
      mode: '0755'

  
